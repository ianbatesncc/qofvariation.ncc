% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calcci.R
\name{aphoci_gen}
\alias{aphoci_gen}
\alias{aphoci_rate}
\alias{aphoci_prop}
\title{Calculate confidence intervals.}
\usage{
aphoci_gen(num, den, multiplier = 1, level = 0.95,
  ci_type = "poisson", bTransposeResults = FALSE,
  return_type = "minimal")

aphoci_rate(num, den, multiplier = 1, level = 0.95,
  bTransposeResults = FALSE)

aphoci_prop(num, den, multiplier = 1, level = 0.95,
  bTransposeResults = FALSE)
}
\arguments{
\item{num}{Numerator}

\item{den}{Denominator}

\item{multiplier}{Multiplier.  Optional - default 1.}

\item{level}{Confidence level (\code{0 < level <= 1}).  Optional - default
0.95}

\item{ci_type}{Type of confidence interval.  Optional - default "poisson"
Possible values {"poisson", "proportion", "poisson_byars", "prop_wilson",
"poisson_native", "proportion_native", "binomial_native"}. Also byars and
wilson can be used (aliased to poisson_byars and prop_wilson respectively).}

\item{bTransposeResults}{Boolean.  Only used when vector options are passed.
If TRUE spin results around.  See \code{return}.  Defaults to FALSE.}

\item{return_type}{Specify list of vectors (default) or data.frame or
data.table.}
}
\value{
Double vector dim 2 containing lower and upper confidence level.

  When vector options are passed the return value is a list of cis i.e.
  list(vec_ci, vec_ci, vec_ci, ...)

  When bTranspose is TRUE the return value is a list of two vectors i.e.
  list(vec_cilo, vec_cihi)
}
\description{
Calculate confidence intervals for differing types of measure given a
numerator and denominator and optionally a multiplier, confidence level and
statistical method.
}
\section{Functions}{
\itemize{
\item \code{aphoci_rate}: Instance to use poisson method (for rates)

\item \code{aphoci_prop}: Instance to use method for proportions
}}

\note{
poisson and proportion use the apho definitions by default.  Override
  to use the native r exact methods by appending "_native" e.g.
  poission_native.

The native proportion test applies a continuity correction by default.
  We do not want this to occur so this case is treated specially.

If any parameter is a vector remaining parameters will be recycled and
  the return value will be a list of vectors.
}
\examples{
## For data.table
if (require("data.table")) {
n <- 100
xn <- stats::runif(n)

dat <- data.table(
    num = xn
    , den = stats::runif(n) + xn
    , mult = 10^stats::runif(n, min = 1, max = 3)
    , level = stats::runif(n, min = 0.95, max = 0.99)
)
dat[, ci := qofvariation.ncc:::aphoci_prop(num, den, mult, level)]
dat[, c("cilo", "cihi") :=
    qofvariation.ncc:::aphoci_prop(
        num, den, mult, level, bTransposeResults = TRUE
    )
]
# or equivalently
dat[, c("cilo", "cihi") := transpose(
    qofvariation.ncc:::aphoci_prop(num, den, mult, level)
)]
dat[, c("cilo", "cihi") := transpose(ci)]
}

## for data.frame
if (require("dplyr")) {

n <- 100
xn <- stats::runif(n)

dat <- data.frame(
    num = xn
    , den = stats::runif(n) + xn
    , mult = 10^stats::runif(n, min = 1, max = 3)
    , level = stats::runif(n, min = 0.95, max = 0.99)
)
dat <- dat \%>\% dplyr::mutate(
    ci = qofvariation.ncc:::aphoci_prop(num, den, mult, level)
)
dat$cilo <- transpose(dat$ci)[[1]]
dat$cihi <- transpose(dat$ci)[[2]]
}

}
\seealso{
Other confidence interval routines: \code{\link{aphoci}},
  \code{\link{calcci}}, \code{\link{stat_test}},
  \code{\link{testci}}, \code{\link{testspc}}

Other calculate routines: \code{\link{calcci}}
}
\concept{calculate routines}
\concept{confidence interval routines}
\concept{generic routines


Convert 2d matrix to a list of vectors, optionally transposing along the way

to convert output of mapply to use with data.frame objects}
